2 Primitive Calculator Problem Introduction
You are given a primitive calculator that can perform the following three operations with the current number x: multiply x by 2, multiply x by 3, or add 1 to x. Your goal is given a positive integer n, find the minimum number of operations needed to obtain the number n starting from the number 1.
Problem Description Task. Given an integer n, compute the minimum number of operations needed to obtain the number n starting from the number 1. Input Format. The input consists of a single integer 1 = n = 106. Output Format. In the first line, output the minimum number k of operations needed to get n from 1. In the second line output a sequence of intermediate numbers. That is, the second line should contain positive integers a0,a2,...,ak-1 such that a0 = 1, ak-1 = n and for all 0 = i < k-1, ai+1 is equal to either ai + 1, 2ai, or 3ai. If there are many such sequences, output any one of them.
Sample 1. 
Input: 1 
Output: 0 
        1
Sample 2. 
Input: 5 
Output: 3 
      1 2 4 5
Here, we first multiply 1 by 2 two times and then add 1. 
Another possibility is to first multiply by 3 and then add 1 two times. Hence “1 3 4 5” is also a valid output in this case.
Sample 3.
Input: 
96234 
Output: 
14 
1 3 9 10 11 22 66 198 594 1782 5346 16038 16039 32078 96234